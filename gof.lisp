(ql:quickload 'lispbuilder-sdl)
	(defvar *color* sdl:*white*)
(defvar *arr*)
(defvar *x_cor* 0)
(defvar *y_cor* 0)
(defvar *size* 50)

(defun game (a b)
 "main function"
 (setq *arr* (make-array (list a b)))
 (dotimes (i a)
  (dotimes (j b)
   (setf (aref *arr* i j) (random 2))))
 (sdl:with-init ()
  (sdl:window 500 500 :title-caption "Potato")
  (setf (sdl:frame-rate) 60)
  (sdl:with-events ()
   (:quit-event () t)
   (:key-down-event (:key key)
    (when (sdl:key= key :sdl-key-a)
     (if (> *x_cor* 0)
     (setf *x_cor* (- *x_cor* 10))))
    (when (sdl:key= key :sdl-key-s)
     (if (> *y_cor* 0)
     (setf *y_cor* (+ *y_cor* 10))))
    (when (sdl:key= key :sdl-key-d)
     (if (< *x_cor* (* a *size*))
     (setf *x_cor* (+ *x_cor* 10))))
    (when (sdl:key= key :sdl-key-w)
     (if (< *y_cor* (* b *size*))
     (setf *y_cor* (- *y_cor* 10))))
    (when (sdl:key= key :sdl-key-escape)
     (quit))
    (when (sdl:key= key :sdl-key-minus)
     (setq *size* (- *size* 10)))
    (when (sdl:key= key :sdl-key-equals)
     (setq *size* (+ *size* 10)))
    )
   (:idle ()
    (sdl:clear-display sdl:*black*)
    (dotimes (i a)
     (dotimes (j a)
;(if (and (x_cor 
      (sdl:draw-box (sdl:rectangle :x (+ *x_cor* (* *size* i)) :y (+ *y_cor* (* *size* j)) :w *size* :h *size* :fp nil) :color (if (= (aref *arr* i j) 1) sdl:*white* sdl:*cyan*))))
    (sdl:update-display)
   )
)
  )
 )

	 (sb-int:with-float-traps-masked (:invalid :inexact :overflow) (game 12 12))
